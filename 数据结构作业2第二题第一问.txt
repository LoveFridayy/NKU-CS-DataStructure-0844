#include <iostream>
using namespace std;

class extendedChain {
public:
    int* arr;
    int size;

    extendedChain() : arr(nullptr), size(0) {}

    ~extendedChain() {
        delete[] arr;
    }

    void input() {
        cout<<"Enter size";
        cin >> size;
        cout<<endl;
        cout<<"Enter arr";
        arr  = new int[size];
        for (int i = 0; i < size; ++i) {
            cin >> arr[i];
        }
    }

    friend void split(const extendedChain& c, extendedChain& a, extendedChain& b);
};

void split(const extendedChain& c, extendedChain& a, extendedChain& b) {

    int singleCount = (c.size + 1) / 2;
    int doubleCount = c.size / 2;
    a.size = singleCount;
    a.arr = new int[singleCount];
    b.size = doubleCount;
    b.arr = new int[doubleCount];

    int singleindex = 0, doubleindex= 0;
    for (int i = 0; i < c.size; ++i) {
        if (i % 2 == 0) {
            b.arr[doubleindex++] = c.arr[i];
        } else {
            a.arr[singleindex++] = c.arr[i];
        }
    }
}
void test() {
        extendedChain c;
        c.input();
        extendedChain a, b;
        split(c, a, b);
        cout << "a: ";
        for (int i = 0; i < a.size; ++i) {
            cout << a.arr[i] << " ";
        }
        cout << endl;

        cout << "b: ";
        for (int i = 0; i < b.size; ++i) {
            cout << b.arr[i] << " ";
        }
        cout << endl;
    }

int main() {
        test();
        return 0;
    }
//split 方法的复杂度为 O(n)，其中 n 是链表 c 的长度